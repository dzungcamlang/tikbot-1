stages:
  - build
  - deploy


image: docker:latest
services:
  - docker:dind


variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

.job_template: &job_definition
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

build:
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-build/
      - $CI_COMMIT_MESSAGE =~ /no-build/

deploy:
  <<: *job_definition
  stage: deploy
  environment:
    name: production
  script:
    - ssh -t -o "StrictHostKeyChecking no" $STAGING_USER@$STAGING_IP "cd tikbot; ./start.sh --update"
  only:
    - master
  dependencies:
    - build
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-deploy/
      - $CI_COMMIT_MESSAGE =~ /no-deploy/
